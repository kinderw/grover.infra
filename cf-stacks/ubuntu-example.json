{
"Description" : "Staging single instance",
"Outputs": {
    "InstanceID": {
        "Description": "The WWW instance id",
        "Value": { "Ref": "StageInstance" }
    }
},
"Parameters": {
    "AMI": {
        "Description": "The Amazon Ubuntu AMI",
        "Type": "String",
        "Default": "ami-996372fd"
    },
    "EBSVolumeSize": {
        "Description": "The size of the EBS volume for the transcoder",
        "Type": "String",
        "Default": "20"
    },
    "InstanceType": {
        "AllowedValues": [
            "t2.micro",
            "t2.small",
            "t2.medium",
            "t2.large",
            "c4.large",
            "c4.xlarge",
            "c4.2xlarge",
            "c4.4xlarge",
            "c4.8xlarge"
        ],
        "ConstraintDescription": "must be a valid EC2 instance type",
        "Default": "t2.micro",
        "Description": "EC2 instance type",
        "Type": "String"
    },
    "KeyName": {
        "Description" : "Name of an existing EC2 KeyPair to enable SSH access to NAT instances.",
                    "Type": "AWS::EC2::KeyPair::KeyName",
                    "ConstraintDescription" : "Must be the name of an existing EC2 KeyPair."        },
    "Subnet": {
        "Description": "The subnet to place the instance in...",
        "Type": "AWS::EC2::Subnet::Id",
        "ConstraintDescription" : "Must be a valid Subnet."
    },
    "VPC": {
        "Description": "The VPC to deploy to...",
        "Type": "AWS::EC2::VPC::Id",
        "ConstraintDescription" : "Must be a valid VPC."
    }
},
"Resources": {
    "StageSecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
            "VpcId": {"Ref": "VPC"},
            "GroupDescription": "Allow SSH, HTTP, and HTTPS access",
            "SecurityGroupIngress": [
                {
                    "IpProtocol": "tcp",
                    "FromPort": "22",
                    "ToPort": "22",
                    "CidrIp": "0.0.0.0/0"
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "80",
                    "ToPort": "80",
                    "CidrIp": "0.0.0.0/0"
                },
                {
                    "IpProtocol": "tcp",
                    "FromPort": "443",
                    "ToPort": "443",
                    "CidrIp": "0.0.0.0/0"
                }
            ]
        }
    },
    "StageInstance": {
        "Type" : "AWS::EC2::Instance",
        "Metadata": {
            "AWS::CloudFormation::Init": {
            "config": {
                "packages": {
                    "apt": {
                    "awscli": [ ],
                    "apache2": [ ],
                    "php7.0": [ ], 
                    "libapache2-mod-php7.0": [ ], 
                    "php7.0-cli": [ ], 
                    "php7.0-common": [ ], 
                    "php7.0-mbstring": [ ], 
                    "php7.0-gd": [ ], 
                    "php7.0-intl": [ ], 
                    "php7.0-xml": [ ], 
                    "php7.0-mysql": [ ], 
                    "php7.0-mcrypt": [ ], 
                    "php7.0-zip": [ ]
                    }
                }
            }
        }
    },
        "Properties": {
            "BlockDeviceMappings" : [{
                "DeviceName" : "/dev/sda1",
                "Ebs" : {"VolumeSize" : {"Ref" : "EBSVolumeSize"}}
            }],
            "SecurityGroupIds": [{"Ref": "StageSecurityGroup"}],
            "KeyName": {"Ref": "KeyName" },
            "ImageId": {"Ref": "AMI"},
            "SubnetId": {"Ref": "Subnet"},
            "InstanceType": {"Ref": "InstanceType"},
            "Tags": [
                {"Key" : "Name", "Value" : "Ldn_Svr_Stage_Web"}
            ],
             "UserData": {
     "Fn::Base64": {
       "Fn::Join": [
         "",
         [
           "#!/bin/bash -x\n",
           "apt-get update\n",
           "apt-get install -y python-pip\n",
           "pip install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
           "cfn-init -v –resource StageInstance",
           " –stack ",
           {
             "Ref": "AWS::StackName"
           },
           " –region ",
           {
             "Ref": "AWS::Region"
           },
           "\n",
           "cfn-signal -e $? –resource StageInstance",
           " –stack ",
           {
             "Ref": "AWS::StackName"
           },
           " –region ",
           {
             "Ref": "AWS::Region"
           },
           "\n"
         ]
       ]
     }
   }
 }
  }
 }
}